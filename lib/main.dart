import 'dart:io' show Platform;
import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:flutter/services.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:isar/isar.dart';
import 'package:path_provider/path_provider.dart';
import 'package:sumeeb_chat/data/cubits/basic-info/basic_info_cubit.dart';
import 'package:sumeeb_chat/data/cubits/chat-connection/chat_connection_cubit.dart';
import 'package:sumeeb_chat/data/cubits/contacts-cubit/contacts_cubit.dart';
import 'package:sumeeb_chat/data/cubits/recent-chats-cubit/recent_chat_cubit.dart';
import 'package:sumeeb_chat/data/cubits/sidebar-manager/sider_manager_cubit.dart';
import 'package:sumeeb_chat/data/cubits/storage/storage_cubit.dart';
import 'package:sumeeb_chat/data/cubits/story-cubit/story_cubit.dart';
import 'package:sumeeb_chat/data/cubits/user-cubit/user_cubit.dart';
import 'package:sumeeb_chat/data/cubits/view-story-cubit/view_story_cubit.dart';
import 'package:sumeeb_chat/data/isar-models/app-settings/iapp_settings.dart';
import 'package:sumeeb_chat/data/isar-models/contacts/icontacts.dart';
import 'package:sumeeb_chat/data/isar-models/irecent-chats/irecent_chats.dart';
import 'package:sumeeb_chat/data/isar-models/user/iuser.dart';
import 'package:sumeeb_chat/data/isar-models/viewed-story/iviewed_story.dart';
import 'package:sumeeb_chat/data/repositories/file_upload_repository.dart/file_upload_repository.dart';
import 'package:sumeeb_chat/pages/settings/dark-mode/bloc/dark_mode_cubit.dart';
import 'package:sumeeb_chat/pages/settings/notifications/bloc/notification_cubit.dart';
import 'package:sumeeb_chat/services/push_notification_service.dart';
import 'package:sumeeb_chat/services/stream_service.dart';

import 'app.dart';
import 'data/cubits/auth_cubit.dart';
import 'data/repositories/firestore/firestore_repository.dart';
import 'package:awesome_notifications/awesome_notifications.dart';

// import 'package:permission_handler/permission_handler.dart';

// IMPORTANT: Replace firebase_options.dart with the file generated by `flutterfire configure`.
// import 'firebase_options.dart';

late Isar isar;
void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await SystemChrome.setPreferredOrientations([
    DeviceOrientation.portraitUp, // normal portrait
  ]);
  if (Platform.isWindows) {
    await Firebase.initializeApp(
      options: const FirebaseOptions(
        apiKey: "AIzaSyCCMIvew_MNdGyYWeK0FlHOlqQSTee6MeU",
        authDomain: "sumeeb-chat.firebaseapp.com",
        projectId: "sumeeb-chat",
        storageBucket: "sumeeb-chat.firebasestorage.app",
        messagingSenderId: "845897869656",
        appId: "1:845897869656:web:6faa60ed29c03b032b1d2d",
      ),
    );
    isar = await Isar.open([
      IuserSchema,
      IrecentChatsSchema,
      IappSettingsSchema,
      IviewedStorySchema,
      IcontactsSchema,
    ], directory: '');
  } else {
    await Firebase.initializeApp();
    final dir = await getApplicationDocumentsDirectory();
    isar = await Isar.open(
      [
        IuserSchema,
        IrecentChatsSchema,
        IappSettingsSchema,
        IviewedStorySchema,
        IcontactsSchema,
      ],
      directory: dir.path, // âœ… real directory for mobile/desktop
      inspector: true,
    );
  }

  final firestoreRepo = FirestoreRepository();
  final fileUploadRepo = FileUploadRepository();
  AwesomeNotifications().initialize('resource://drawable/launcher_icon', [
    NotificationChannel(
      channelKey: 'basic_channel',
      channelName: 'Basic notifications',
      channelDescription: 'Used for wallet and app alerts',
      defaultColor: Color.fromARGB(255, 82, 101, 140),
      ledColor: Colors.white,
      importance: NotificationImportance.High,
      channelShowBadge: true,
    ),
  ], debug: true);
  // configure API key inside the file or via env
  bool isAllowed = await AwesomeNotifications().isNotificationAllowed();
  if (!isAllowed) {
    // This will trigger a permission dialog on Android 13+ and iOS
    await AwesomeNotifications().requestPermissionToSendNotifications();
  }
  // try {
  //   String? token = await FirebaseMessaging.instance.getToken();
  //   print(" <===== Token: $token =====>");
  // } catch (error) {
  //   print("Error getting FCM token: $error");
  // }
  final recentChatCubit = RecentChatCubit(isar, firestoreRepo);
  final contacts = ContactsCubit(firestoreRepo, isar);
  final chatConnection = ChatConnectionCubit();
  final streamService = StreamService();
  PushNotificationService.initialize(
    recentChatCubit,
    contacts,
    chatConnection,
    isar,
  );
  runApp(
    MultiBlocProvider(
      providers: [
        BlocProvider(create: (_) => AuthCubit(firestoreRepo)),
        BlocProvider(create: (_) => contacts..fetchPhoneContacts()),
        BlocProvider(create: (_) => StorageCubit(isar)..getUserData()),
        BlocProvider(create: (_) => DarkModeCubit()),
        BlocProvider(create: (_) => SiderManagerCubit()),
        BlocProvider(create: (_) => ViewStoryCubit()),
        BlocProvider(create: (_) => UserCubit(firestoreRepo)),
        BlocProvider(create: (_) => NotificationsPreferenceCubit()),
        BlocProvider(
          create: (_) => BasicInfoCubit(firestoreRepo, fileUploadRepo),
        ),
        BlocProvider(
          create: (_) => StoryCubit(firestoreRepo, isar, fileUploadRepo),
        ),
        BlocProvider(create: (_) => chatConnection),
        BlocProvider(create: (_) => recentChatCubit..getRecentChats()),
      ],
      child: MyApp(streamService: streamService),
    ),
  );
}
